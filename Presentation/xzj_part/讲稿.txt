As we know, the complexity of search algorithm is exponential, which means that the efficiency is closely related to the depth of the search. For example, in an undirected graph, the degree of each vertex is 5 and we want to find the path from S to T.If the distance of S and T is L, which means if we walk from S, the number of the possible T is 4^L and we should search all these vertexex. So The complexity of this algorithm is O(4^L).However, if we search from S and T at the same time, each one just needs to search those vertexes whose distance is L/2. And we put those vertexes in to Set_S and Set_T. The size of both sets are 4^(L/2), and we just need to find the intersection ot Set_S and Set_T, denoted by P. So the path from S to T is the union of path from S to P and path from P to T. The complexity if O(4^(L/2)).